%div.d-flex.align-items-center.justify-content-between
  %h1.mt-2 Ordenes
  - if params[:client_id].present? || params[:start_date].present? || params[:end_date].present? || params[:state].present?
    .alert.alert-success.mt-3
      Filtro de ordenes aplicado
  = button_tag "Filtrar", class: "btn btn-primary", data: { bs_toggle: "collapse", bs_target: "#filterForm" }
%div.collapse.mt-4{id: "filterForm"}
  = form_tag orders_path, method: :get, class: "form-inline" do
    .form-group.mx-4
      = label_tag t('activerecord.modules.client.one')
      = select_tag :client_id, options_for_select(@clients, params[:client_id]), include_blank: true, class: "form-control"
    .form-group.mx-4
      = label_tag t('application.start_date')
      = date_field_tag :start_date, params[:start_date], placeholder: "Fecha de inicio", class: "form-control"
    .form-group.mx-4
      = label_tag t('application.end_date')
      = date_field_tag :end_date, params[:end_date], placeholder: "Fecha de fin", class: "form-control"
    .form-group.mx-4
      = label_tag t('application.state')
      = select_tag :state, options_for_select(stateOrder, params[:state]), include_blank: true, class: "form-control"
    .form-group.mx-4.mt-2
      = submit_tag "Filtrar", class: "btn btn-primary"
      = link_to "Restablecer", orders_path, class: "btn btn-secondary"

%table.table.table-striped
  %thead
    %tr
      %th= t('application.full_name')
      %th= t('activerecord.attributes.order.created_at')
      %th= t('activerecord.modules.order.one')
      %th= t('activerecord.attributes.order.state')
      %th

  %tbody
    - @orders.each do |order|
      - if order.order_dishes.present? && order.order_dishes.any? { |order_dish| order_dish.state == "ready" } 
        %tr
          %td= order.client.first_name + " " + order.client.last_name
          %td= order.created_at.strftime("%d-%m-%Y %H:%M:%S")
          %td
            - if order.dishes.present?
              = order.dishes.map(&:name).join(", ")
          %td 
            - if order.delivered?
              = t('activerecord.attributes.order.types_state.delivered')
            - elsif order.on_Time?
              = t('activerecord.attributes.order.types_state.on_Time')
            - elsif order.delayed?
              = t('activerecord.attributes.order.types_state.delayed')
            - elsif order.late?
              = t('activerecord.attributes.order.types_state.late')
            - elsif order.cancelled?
              = t('activerecord.attributes.order.types_state.cancelled')
          %td.d-flex.justify-content-end
            .btn-group.dropdown
              %button.btn.btn-success.dropdown-toggle{"type" => "button", "data-bs-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false"}
                = t('application.actions')
              .dropdown-menu.dropdown-menu-end
                = link_to t('application.show'), order, class: "dropdown-item"
                = link_to t('application.edit'), edit_order_path(order), class: "dropdown-item"
                = button_to t('application.delete'), order, method: :delete, class: "dropdown-item", data: { confirm: t('application.confirm_delete') }